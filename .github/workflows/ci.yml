name: CI

on:
  push:
    branches: [ "master", "release*" ]
  pull_request:
    branches: [ "master", "release*" ]
  workflow_dispatch:

jobs:
  lint:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.6.1"]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - uses: actions/cache@v3
        name: Define cache
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install project dependencies
        run: poetry install

      - name: Lint
        run: poetry run ruff check .

  typecheck:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.6.1"]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - uses: actions/cache@v3
        name: Define cache
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install project dependencies
        run: poetry install

      - name: Typecheck
        run: poetry run pyright

  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.6.1"]
        os: ["ubuntu-latest", "macos-latest"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Setup git
        run: |
          git --version
          git config --global user.name "Github Actions"
          git config --global user.email "<>"

      - uses: actions/cache@v3
        name: Define cache
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install project dependencies
        run: poetry install

      - name: Run tests
        run: poetry run pytest --cov -vv --cov-report xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
